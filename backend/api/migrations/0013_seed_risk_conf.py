# Generated by Django 5.2.4 on 2025-09-04 22:48

from django.db import migrations

def seed_risk_conf(apps, schema_editor):
    LikelihoodItem = apps.get_model("api", "LikelihoodItem")
    ImpactItem = apps.get_model("api", "ImpactItem")
    ControlEffectivenessItem = apps.get_model("api", "ControlEffectivenessItem")
    RiskLevelBand = apps.get_model("api", "RiskLevelBand")

    if LikelihoodItem.objects.count() == 0:
        LikelihoodItem.objects.bulk_create([
            LikelihoodItem(value=5, label_pt="Muito Alta"),
            LikelihoodItem(value=4, label_pt="Alta"),
            LikelihoodItem(value=3, label_pt="Média"),
            LikelihoodItem(value=2, label_pt="Baixa"),
            LikelihoodItem(value=1, label_pt="Muito Baixa"),
        ])

    if ImpactItem.objects.count() == 0:
        ImpactItem.objects.bulk_create([
            ImpactItem(value=5, label_pt="Catastrófico"),
            ImpactItem(value=4, label_pt="Grande"),
            ImpactItem(value=3, label_pt="Médio"),
            ImpactItem(value=2, label_pt="Pequeno"),
            ImpactItem(value=1, label_pt="Muito Pequeno"),
        ])

    if ControlEffectivenessItem.objects.count() == 0:
        ControlEffectivenessItem.objects.bulk_create([
            ControlEffectivenessItem(value=5, label_pt="Muito efetivo", reduction_min=81, reduction_max=100),
            ControlEffectivenessItem(value=4, label_pt="Efetivo", reduction_min=61, reduction_max=80),
            ControlEffectivenessItem(value=3, label_pt="Moderadamente efetivo", reduction_min=41, reduction_max=60),
            ControlEffectivenessItem(value=2, label_pt="Pouco efetivo", reduction_min=21, reduction_max=40),
            ControlEffectivenessItem(value=1, label_pt="Não efetivo", reduction_min=0,  reduction_max=20),
        ])

    if RiskLevelBand.objects.count() == 0:
        RiskLevelBand.objects.bulk_create([
            RiskLevelBand(name="Baixo",   color="#00B050", min_score=1,  max_score=5),
            RiskLevelBand(name="Médio",   color="#FFC000", min_score=6,  max_score=12),
            RiskLevelBand(name="Alto",    color="#ED7D31", min_score=15, max_score=19),
            RiskLevelBand(name="Crítico", color="#C00000", min_score=20, max_score=25),
        ])

def undo_seed(apps, schema_editor):
    LikelihoodItem = apps.get_model("api", "LikelihoodItem")
    ImpactItem = apps.get_model("api", "ImpactItem")
    ControlEffectivenessItem = apps.get_model("api", "ControlEffectivenessItem")
    RiskLevelBand = apps.get_model("api", "RiskLevelBand")
    LikelihoodItem.objects.all().delete()
    ImpactItem.objects.all().delete()
    ControlEffectivenessItem.objects.all().delete()
    RiskLevelBand.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0012_controleffectivenessitem_impactitem_incident_and_more'),
    ]

    operations = [
        migrations.RunPython(seed_risk_conf, reverse_code=undo_seed),
    ]
